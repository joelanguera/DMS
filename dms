#!/bin/bash


# UTILITY FUNCTIONS

cleanup() {
    pactl unload-module $module_id
    killall -q parec lame
    exit 0
}

function require {
    hash $1 2>/dev/null || {
	echo >&2 "Error: '$1' is required, but was not found."; exit 1;
    }
}


# SETUP

# Check if arguments given
if [[ -z "$1" ]]; then
    # No arguments given
    echo "Entra el nom de la biblioteca"
    exit 1
fi


# Assert standard Unix utilities are available.
require grep
require pulseaudio
require lame
require spotify
require eyeD3
require glyrc


default_output=$(pacmd list-sinks | grep -A1 "* index" | grep -oP "<\K[^ >]+")
default_output_index=$(pacmd list-sinks | grep "* index" | awk -F ': ' '{print $2}') 

module_id=$(pactl load-module module-combine-sink sink_name=record-n-play slaves=$default_output sink_properties=device.description="Record-and-Play")

# Agafem l'index del sink-input Spotify i l'afegim al combined sink
index=$(pacmd list-sink-inputs | grep -B15 Spotify | grep index: | awk -F ': ' '{print $2}')
pactl move-sink-input $index record-n-play

# El combined sink tendeix a convertirse en el default system output device. Ho revertim
pacmd set-default-sink $default_output_index

# Exportem les variables perque les pugui fer servir cleanup
export module_id



trap "cleanup" SIGINT SIGTERM


# MAIN

first=true
while true
do
    eval $(./sp eval)

    if [[ $prev_trackid != "$SPOTIFY_TRACKID" && $SPOTIFY_TRACKID == "spotify:ad:"* ]]; then      # mirem que no sigui un anunci
	echo -e "Anunci\n"
	add_counter=$((add_counter + 1))
    elif [[ $prev_trackid != "$SPOTIFY_TRACKID" && $SPOTIFY_TRACKID != "spotify:ad:"* ]]; then
	add_counter=0
	echo "add counter reseted"
    fi

    
    if [[ ($prev_trackid != "$SPOTIFY_TRACKID" || $first = true) && $add_counter < 2 ]]; then
	if [[ $first != true && $prev_trackid != "spotify:ad:"* && $glyrc_exit_status == 0 ]]; then     # Despres d'un anunci no hem d'entrar, ja que no el guardem ni li posem cover

	    if [[ $cover_name == *":"* ]]; then
		mv "$folder/$cover_name" "$folder/${cover_name//:/;}"
		cover_name=${cover_name//:/;}                    # traiem els ':' per eye3D
	    fi
	    # Afegim a l'anterior canço la seva caràtula
	    eyeD3 --add-image "$folder/$cover_name:FRONT_COVER" "$folder/${prev_title}.mp3"
	    status=$?
	    echo
	    echo "EXIT_CODE (eyeD3): $status"
	    echo
	    echo "Canvi de canço"
	    killall -q parec lame
	fi
	first=false

	echo "add_counter: $add_counter"

	
	if [[ $add_counter < 1 ]]; then                              # Si es un anunci, no hem de fer res mes
	    folder="$1/$SPOTIFY_ARTIST/$SPOTIFY_ALBUM///"            # Creem variable amb la ruta del directori corresponent
	    folder=${folder//:/;}                                    # el path no pot contenir ':', ja que no son compatibles amb eyeD3
	                                                             # Les tres / son per identificar el nom de l'album cover posteriorment
	
	    if [[ -f "$folder/${SPOTIFY_TITLE}.mp3" ]]; then         # mirem que no existeixi
		echo -e "La canço \"$SPOTIFY_TITLE\", ja existeix\n"
	    
	    else
		mkdir -p "$folder"
		#sleep 1
		echo -e "Enregistrant: $SPOTIFY_TITLE\n"
		parec --format=s16le -d record-n-play.monitor | \
		    lame --tt "$SPOTIFY_TITLE"               \
			 --ta "$SPOTIFY_ARTIST"              \
			 --tl "$SPOTIFY_ALBUM"               \
			 --tn "$SPOTIFY_TRACKNUMBER"         \
			 -r -q 3 --abr 192 - "$folder/${SPOTIFY_TITLE}.mp3" > /dev/null &1>/dev/null
		
		# Descarreguem l'album cover
		if [ ! -f "$folder"/*cover*.png ]; then              # mirem que no estigui ja descarregat
		    cover_name=$(glyrc cover --artist "$SPOTIFY_ARTIST" --album "$SPOTIFY_ALBUM" -w "$folder" 2>&1 >/dev/null \
				     | grep -F "$folder" `# -F també busca caràcters especials`  \
				     | awk -F '///' '{print $2}'                                 \
				     | sed s'/.$//'; exit ${PIPESTATUS[0]})
		    glyrc_exit_status=$?
		    echo "cover_name: $cover_name"
		    echo "EXIT_CODE (glyrc): $glyrc_exit_status"
		    echo
		else
		    echo "Album cover ja descarregat"
		fi
	    fi
	fi
    fi
    prev_title=$SPOTIFY_TITLE
    prev_trackid=$SPOTIFY_TRACKID	
done
